version: '3'

services:
  nginx:
    container_name: search-product_nginx
    build: docker/nginx
    ports:
      - '8080:80'
    volumes:
      - './:/var/www/html/'
      - './docker/nginx/default.conf:/etc/nginx/conf.d/default.conf'
  php:
    container_name: search-product_php
    build:
      context: .
      dockerfile: docker/php/Dockerfile
    volumes:
      - './:/var/www/html/'
      - './docker/php/xdebug.ini:/usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini'
      - './docker/php/php.ini:/usr/local/etc/php/php.ini'
  elasticsearch:
    container_name: search-product_elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:7.15.2
    volumes:
      - "elastic_app:/var/lib/elastic"
    environment:
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - discovery.type=single-node
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - ${ELASTIC_PORT}:9200
  kibana:
    container_name: search-product_kibana
    image: docker.elastic.co/kibana/kibana:7.15.2
    environment:
      - ELASTICSEARCH_HOSTS=${ELASTICSEARCH_URL}
    ports:
      - ${KIBANA_PORT}:5601
  database:
    container_name: search-product_mysql
    image: mysql:8.0.33
    command: --default-authentication-plugin=mysql_native_password --sql_mode=""
    volumes:
      - "mysql_app:/var/lib/mysql"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - ${MYSQL_PORT}:3306

volumes:
  mysql_app: {}
  elastic_app: {}
